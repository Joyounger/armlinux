/****************************************************************************
** KExtendedSocket meta object code from reading C++ file 'kextsock.h'
**
** Created: Thu Nov 20 06:14:54 2008
**      by: The Qt MOC ($Id: qt/src/moc/moc.y   2.3.10   edited 2005-01-24 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#define Q_MOC_OUTPUT_REVISION 9
#elif Q_MOC_OUTPUT_REVISION != 9
#error "Moc format conflict - please regenerate all moc files"
#endif

#include "kextsock.h"
#include <qmetaobject.h>
#include <qapplication.h>
#ifdef QWS
#include <qobjectdict.h>
#endif



const char *KExtendedSocket::className() const
{
    return "KExtendedSocket";
}

QMetaObject *KExtendedSocket::metaObj = 0;

#ifdef QWS
static class KExtendedSocket_metaObj_Unloader {
public:
    ~KExtendedSocket_metaObj_Unloader()
    {
         if ( objectDict )
             objectDict->remove( "KExtendedSocket" );
    }
} KExtendedSocket_metaObj_unloader;
#endif

void KExtendedSocket::initMetaObject()
{
    if ( metaObj )
	return;
    if ( qstrcmp(KBufferedIO::className(), "KBufferedIO") != 0 )
	badSuperclassWarning("KExtendedSocket","KBufferedIO");
    (void) staticMetaObject();
}

#ifndef QT_NO_TRANSLATION

QString KExtendedSocket::tr(const char* s)
{
    return qApp->translate( "KExtendedSocket", s, 0 );
}

QString KExtendedSocket::tr(const char* s, const char * c)
{
    return qApp->translate( "KExtendedSocket", s, c );
}

#endif // QT_NO_TRANSLATION

QMetaObject* KExtendedSocket::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    (void) KBufferedIO::staticMetaObject();
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    typedef void (KExtendedSocket::*m1_t0)();
    typedef void (QObject::*om1_t0)();
    typedef void (KExtendedSocket::*m1_t1)();
    typedef void (QObject::*om1_t1)();
    typedef void (KExtendedSocket::*m1_t2)();
    typedef void (QObject::*om1_t2)();
    typedef void (KExtendedSocket::*m1_t3)();
    typedef void (QObject::*om1_t3)();
    typedef void (KExtendedSocket::*m1_t4)();
    typedef void (QObject::*om1_t4)();
    m1_t0 v1_0 = &KExtendedSocket::socketActivityRead;
    om1_t0 ov1_0 = (om1_t0)v1_0;
    m1_t1 v1_1 = &KExtendedSocket::socketActivityWrite;
    om1_t1 ov1_1 = (om1_t1)v1_1;
    m1_t2 v1_2 = &KExtendedSocket::dnsResultsReady;
    om1_t2 ov1_2 = (om1_t2)v1_2;
    m1_t3 v1_3 = &KExtendedSocket::startAsyncConnectSlot;
    om1_t3 ov1_3 = (om1_t3)v1_3;
    m1_t4 v1_4 = &KExtendedSocket::connectionEvent;
    om1_t4 ov1_4 = (om1_t4)v1_4;
    QMetaData *slot_tbl = QMetaObject::new_metadata(5);
    QMetaData::Access *slot_tbl_access = QMetaObject::new_metaaccess(5);
    slot_tbl[0].name = "socketActivityRead()";
    slot_tbl[0].ptr = (QMember)ov1_0;
    slot_tbl_access[0] = QMetaData::Protected;
    slot_tbl[1].name = "socketActivityWrite()";
    slot_tbl[1].ptr = (QMember)ov1_1;
    slot_tbl_access[1] = QMetaData::Protected;
    slot_tbl[2].name = "dnsResultsReady()";
    slot_tbl[2].ptr = (QMember)ov1_2;
    slot_tbl_access[2] = QMetaData::Protected;
    slot_tbl[3].name = "startAsyncConnectSlot()";
    slot_tbl[3].ptr = (QMember)ov1_3;
    slot_tbl_access[3] = QMetaData::Protected;
    slot_tbl[4].name = "connectionEvent()";
    slot_tbl[4].ptr = (QMember)ov1_4;
    slot_tbl_access[4] = QMetaData::Protected;
    typedef void (KExtendedSocket::*m2_t0)(int);
    typedef void (QObject::*om2_t0)(int);
    typedef void (KExtendedSocket::*m2_t1)();
    typedef void (QObject::*om2_t1)();
    typedef void (KExtendedSocket::*m2_t2)(int);
    typedef void (QObject::*om2_t2)(int);
    m2_t0 v2_0 = &KExtendedSocket::lookupFinished;
    om2_t0 ov2_0 = (om2_t0)v2_0;
    m2_t1 v2_1 = &KExtendedSocket::connectionSuccess;
    om2_t1 ov2_1 = (om2_t1)v2_1;
    m2_t2 v2_2 = &KExtendedSocket::connectionFailed;
    om2_t2 ov2_2 = (om2_t2)v2_2;
    QMetaData *signal_tbl = QMetaObject::new_metadata(3);
    signal_tbl[0].name = "lookupFinished(int)";
    signal_tbl[0].ptr = (QMember)ov2_0;
    signal_tbl[1].name = "connectionSuccess()";
    signal_tbl[1].ptr = (QMember)ov2_1;
    signal_tbl[2].name = "connectionFailed(int)";
    signal_tbl[2].ptr = (QMember)ov2_2;
    metaObj = QMetaObject::new_metaobject(
	"KExtendedSocket", "KBufferedIO",
	slot_tbl, 5,
	signal_tbl, 3,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    metaObj->set_slot_access( slot_tbl_access );
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    return metaObj;
}

// SIGNAL lookupFinished
void KExtendedSocket::lookupFinished( int t0 )
{
    activate_signal( "lookupFinished(int)", t0 );
}

// SIGNAL connectionSuccess
void KExtendedSocket::connectionSuccess()
{
    activate_signal( "connectionSuccess()" );
}

// SIGNAL connectionFailed
void KExtendedSocket::connectionFailed( int t0 )
{
    activate_signal( "connectionFailed(int)", t0 );
}
