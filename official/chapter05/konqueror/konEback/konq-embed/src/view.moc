/****************************************************************************
** View meta object code from reading C++ file 'view.h'
**
** Created: Thu Nov 20 06:21:53 2008
**      by: The Qt MOC ($Id: qt/src/moc/moc.y   2.3.10   edited 2005-01-24 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#define Q_MOC_OUTPUT_REVISION 9
#elif Q_MOC_OUTPUT_REVISION != 9
#error "Moc format conflict - please regenerate all moc files"
#endif

#include "view.h"
#include <qmetaobject.h>
#include <qapplication.h>
#ifdef QWS
#include <qobjectdict.h>
#endif



const char *View::className() const
{
    return "View";
}

QMetaObject *View::metaObj = 0;

#ifdef QWS
static class View_metaObj_Unloader {
public:
    ~View_metaObj_Unloader()
    {
         if ( objectDict )
             objectDict->remove( "View" );
    }
} View_metaObj_unloader;
#endif

void View::initMetaObject()
{
    if ( metaObj )
	return;
    if ( qstrcmp(QObject::className(), "QObject") != 0 )
	badSuperclassWarning("View","QObject");
    (void) staticMetaObject();
}

#ifndef QT_NO_TRANSLATION

QString View::tr(const char* s)
{
    return qApp->translate( "View", s, 0 );
}

QString View::tr(const char* s, const char * c)
{
    return qApp->translate( "View", s, c );
}

#endif // QT_NO_TRANSLATION

QMetaObject* View::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    (void) QObject::staticMetaObject();
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    typedef void (View::*m1_t0)(const KURL&,const KParts::URLArgs&);
    typedef void (QObject::*om1_t0)(const KURL&,const KParts::URLArgs&);
    typedef void (View::*m1_t1)(const QString&);
    typedef void (QObject::*om1_t1)(const QString&);
    typedef void (View::*m1_t2)();
    typedef void (QObject::*om1_t2)();
    typedef void (View::*m1_t3)();
    typedef void (QObject::*om1_t3)();
    typedef void (View::*m1_t4)(int);
    typedef void (QObject::*om1_t4)(int);
    typedef void (View::*m1_t5)(bool);
    typedef void (QObject::*om1_t5)(bool);
    typedef void (View::*m1_t6)(const QString&);
    typedef void (QObject::*om1_t6)(const QString&);
    typedef void (View::*m1_t7)(const QString&);
    typedef void (QObject::*om1_t7)(const QString&);
    typedef void (View::*m1_t8)(const QString&);
    typedef void (QObject::*om1_t8)(const QString&);
    typedef void (View::*m1_t9)();
    typedef void (QObject::*om1_t9)();
    m1_t0 v1_0 = &View::openURL;
    om1_t0 ov1_0 = (om1_t0)v1_0;
    m1_t1 v1_1 = &View::setFindText;
    om1_t1 ov1_1 = (om1_t1)v1_1;
    m1_t2 v1_2 = &View::find;
    om1_t2 ov1_2 = (om1_t2)v1_2;
    m1_t3 v1_3 = &View::findNext;
    om1_t3 ov1_3 = (om1_t3)v1_3;
    m1_t4 v1_4 = &View::zoomTo;
    om1_t4 ov1_4 = (om1_t4)v1_4;
    m1_t5 v1_5 = &View::toggleStatusBar;
    om1_t5 ov1_5 = (om1_t5)v1_5;
    m1_t6 v1_6 = &View::setLocationBarURL;
    om1_t6 ov1_6 = (om1_t6)v1_6;
    m1_t7 v1_7 = &View::statusMessage;
    om1_t7 ov1_7 = (om1_t7)v1_7;
    m1_t8 v1_8 = &View::setCaption;
    om1_t8 ov1_8 = (om1_t8)v1_8;
    m1_t9 v1_9 = &View::partDestroyed;
    om1_t9 ov1_9 = (om1_t9)v1_9;
    QMetaData *slot_tbl = QMetaObject::new_metadata(10);
    QMetaData::Access *slot_tbl_access = QMetaObject::new_metaaccess(10);
    slot_tbl[0].name = "openURL(const KURL&,const KParts::URLArgs&)";
    slot_tbl[0].ptr = (QMember)ov1_0;
    slot_tbl_access[0] = QMetaData::Public;
    slot_tbl[1].name = "setFindText(const QString&)";
    slot_tbl[1].ptr = (QMember)ov1_1;
    slot_tbl_access[1] = QMetaData::Public;
    slot_tbl[2].name = "find()";
    slot_tbl[2].ptr = (QMember)ov1_2;
    slot_tbl_access[2] = QMetaData::Public;
    slot_tbl[3].name = "findNext()";
    slot_tbl[3].ptr = (QMember)ov1_3;
    slot_tbl_access[3] = QMetaData::Public;
    slot_tbl[4].name = "zoomTo(int)";
    slot_tbl[4].ptr = (QMember)ov1_4;
    slot_tbl_access[4] = QMetaData::Public;
    slot_tbl[5].name = "toggleStatusBar(bool)";
    slot_tbl[5].ptr = (QMember)ov1_5;
    slot_tbl_access[5] = QMetaData::Public;
    slot_tbl[6].name = "setLocationBarURL(const QString&)";
    slot_tbl[6].ptr = (QMember)ov1_6;
    slot_tbl_access[6] = QMetaData::Protected;
    slot_tbl[7].name = "statusMessage(const QString&)";
    slot_tbl[7].ptr = (QMember)ov1_7;
    slot_tbl_access[7] = QMetaData::Protected;
    slot_tbl[8].name = "setCaption(const QString&)";
    slot_tbl[8].ptr = (QMember)ov1_8;
    slot_tbl_access[8] = QMetaData::Protected;
    slot_tbl[9].name = "partDestroyed()";
    slot_tbl[9].ptr = (QMember)ov1_9;
    slot_tbl_access[9] = QMetaData::Private;
    typedef void (View::*m2_t0)(View*,const KURL&,const KParts::URLArgs&);
    typedef void (QObject::*om2_t0)(View*,const KURL&,const KParts::URLArgs&);
    typedef void (View::*m2_t1)(const KURL&,KParts::Factory*,bool);
    typedef void (QObject::*om2_t1)(const KURL&,KParts::Factory*,bool);
    typedef void (View::*m2_t2)(const QString&);
    typedef void (QObject::*om2_t2)(const QString&);
    typedef void (View::*m2_t3)(const QString&);
    typedef void (QObject::*om2_t3)(const QString&);
    typedef void (View::*m2_t4)(const QString&,bool);
    typedef void (QObject::*om2_t4)(const QString&,bool);
    typedef void (View::*m2_t5)(const char*);
    typedef void (QObject::*om2_t5)(const char*);
    m2_t0 v2_0 = &View::openURLRequest;
    om2_t0 ov2_0 = (om2_t0)v2_0;
    m2_t1 v2_1 = &View::createPartView;
    om2_t1 ov2_1 = (om2_t1)v2_1;
    m2_t2 v2_2 = &View::captionChanged;
    om2_t2 ov2_2 = (om2_t2)v2_2;
    m2_t3 v2_3 = &View::locationBarURLChanged;
    om2_t3 ov2_3 = (om2_t3)v2_3;
    m2_t4 v2_4 = &View::statusMessage;
    om2_t4 ov2_4 = (om2_t4)v2_4;
    m2_t5 v2_5 = &View::actionChanged;
    om2_t5 ov2_5 = (om2_t5)v2_5;
    QMetaData *signal_tbl = QMetaObject::new_metadata(6);
    signal_tbl[0].name = "openURLRequest(View*,const KURL&,const KParts::URLArgs&)";
    signal_tbl[0].ptr = (QMember)ov2_0;
    signal_tbl[1].name = "createPartView(const KURL&,KParts::Factory*,bool)";
    signal_tbl[1].ptr = (QMember)ov2_1;
    signal_tbl[2].name = "captionChanged(const QString&)";
    signal_tbl[2].ptr = (QMember)ov2_2;
    signal_tbl[3].name = "locationBarURLChanged(const QString&)";
    signal_tbl[3].ptr = (QMember)ov2_3;
    signal_tbl[4].name = "statusMessage(const QString&,bool)";
    signal_tbl[4].ptr = (QMember)ov2_4;
    signal_tbl[5].name = "actionChanged(const char*)";
    signal_tbl[5].ptr = (QMember)ov2_5;
    metaObj = QMetaObject::new_metaobject(
	"View", "QObject",
	slot_tbl, 10,
	signal_tbl, 6,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    metaObj->set_slot_access( slot_tbl_access );
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    return metaObj;
}

#include <qobjectdefs.h>
#include <qsignalslotimp.h>

// SIGNAL openURLRequest
void View::openURLRequest( View* t0, const KURL& t1, const KParts::URLArgs& t2 )
{
    // No builtin function for signal parameter type View*,const KURL&,const KParts::URLArgs&
    QConnectionList *clist = receivers("openURLRequest(View*,const KURL&,const KParts::URLArgs&)");
    if ( !clist || signalsBlocked() )
	return;
    typedef void (QObject::*RT0)();
    typedef void (QObject::*RT1)(View*);
    typedef void (QObject::*RT2)(View*,const KURL&);
    typedef void (QObject::*RT3)(View*,const KURL&,const KParts::URLArgs&);
    RT0 r0;
    RT1 r1;
    RT2 r2;
    RT3 r3;
    QConnectionListIt it(*clist);
    QConnection   *c;
    QSenderObject *object;
    while ( (c=it.current()) ) {
	++it;
	object = (QSenderObject*)c->object();
	object->setSender( this );
	switch ( c->numArgs() ) {
	    case 0:
#ifdef Q_FP_CCAST_BROKEN
		r0 = reinterpret_cast<RT0>(*(c->member()));
#else
		r0 = (RT0)*(c->member());
#endif
		(object->*r0)();
		break;
	    case 1:
#ifdef Q_FP_CCAST_BROKEN
		r1 = reinterpret_cast<RT1>(*(c->member()));
#else
		r1 = (RT1)*(c->member());
#endif
		(object->*r1)(t0);
		break;
	    case 2:
#ifdef Q_FP_CCAST_BROKEN
		r2 = reinterpret_cast<RT2>(*(c->member()));
#else
		r2 = (RT2)*(c->member());
#endif
		(object->*r2)(t0, t1);
		break;
	    case 3:
#ifdef Q_FP_CCAST_BROKEN
		r3 = reinterpret_cast<RT3>(*(c->member()));
#else
		r3 = (RT3)*(c->member());
#endif
		(object->*r3)(t0, t1, t2);
		break;
	}
    }
}

// SIGNAL createPartView
void View::createPartView( const KURL& t0, KParts::Factory* t1, bool t2 )
{
    // No builtin function for signal parameter type const KURL&,KParts::Factory*,bool
    QConnectionList *clist = receivers("createPartView(const KURL&,KParts::Factory*,bool)");
    if ( !clist || signalsBlocked() )
	return;
    typedef void (QObject::*RT0)();
    typedef void (QObject::*RT1)(const KURL&);
    typedef void (QObject::*RT2)(const KURL&,KParts::Factory*);
    typedef void (QObject::*RT3)(const KURL&,KParts::Factory*,bool);
    RT0 r0;
    RT1 r1;
    RT2 r2;
    RT3 r3;
    QConnectionListIt it(*clist);
    QConnection   *c;
    QSenderObject *object;
    while ( (c=it.current()) ) {
	++it;
	object = (QSenderObject*)c->object();
	object->setSender( this );
	switch ( c->numArgs() ) {
	    case 0:
#ifdef Q_FP_CCAST_BROKEN
		r0 = reinterpret_cast<RT0>(*(c->member()));
#else
		r0 = (RT0)*(c->member());
#endif
		(object->*r0)();
		break;
	    case 1:
#ifdef Q_FP_CCAST_BROKEN
		r1 = reinterpret_cast<RT1>(*(c->member()));
#else
		r1 = (RT1)*(c->member());
#endif
		(object->*r1)(t0);
		break;
	    case 2:
#ifdef Q_FP_CCAST_BROKEN
		r2 = reinterpret_cast<RT2>(*(c->member()));
#else
		r2 = (RT2)*(c->member());
#endif
		(object->*r2)(t0, t1);
		break;
	    case 3:
#ifdef Q_FP_CCAST_BROKEN
		r3 = reinterpret_cast<RT3>(*(c->member()));
#else
		r3 = (RT3)*(c->member());
#endif
		(object->*r3)(t0, t1, t2);
		break;
	}
    }
}

// SIGNAL captionChanged
void View::captionChanged( const QString& t0 )
{
    activate_signal_strref( "captionChanged(const QString&)", t0 );
}

// SIGNAL locationBarURLChanged
void View::locationBarURLChanged( const QString& t0 )
{
    activate_signal_strref( "locationBarURLChanged(const QString&)", t0 );
}

// SIGNAL statusMessage
void View::statusMessage( const QString& t0, bool t1 )
{
    // No builtin function for signal parameter type const QString&,bool
    QConnectionList *clist = receivers("statusMessage(const QString&,bool)");
    if ( !clist || signalsBlocked() )
	return;
    typedef void (QObject::*RT0)();
    typedef void (QObject::*RT1)(const QString&);
    typedef void (QObject::*RT2)(const QString&,bool);
    RT0 r0;
    RT1 r1;
    RT2 r2;
    QConnectionListIt it(*clist);
    QConnection   *c;
    QSenderObject *object;
    while ( (c=it.current()) ) {
	++it;
	object = (QSenderObject*)c->object();
	object->setSender( this );
	switch ( c->numArgs() ) {
	    case 0:
#ifdef Q_FP_CCAST_BROKEN
		r0 = reinterpret_cast<RT0>(*(c->member()));
#else
		r0 = (RT0)*(c->member());
#endif
		(object->*r0)();
		break;
	    case 1:
#ifdef Q_FP_CCAST_BROKEN
		r1 = reinterpret_cast<RT1>(*(c->member()));
#else
		r1 = (RT1)*(c->member());
#endif
		(object->*r1)(t0);
		break;
	    case 2:
#ifdef Q_FP_CCAST_BROKEN
		r2 = reinterpret_cast<RT2>(*(c->member()));
#else
		r2 = (RT2)*(c->member());
#endif
		(object->*r2)(t0, t1);
		break;
	}
    }
}

// SIGNAL actionChanged
void View::actionChanged( const char* t0 )
{
    activate_signal( "actionChanged(const char*)", t0 );
}


const char *BrowserView::className() const
{
    return "BrowserView";
}

QMetaObject *BrowserView::metaObj = 0;

#ifdef QWS
static class BrowserView_metaObj_Unloader {
public:
    ~BrowserView_metaObj_Unloader()
    {
         if ( objectDict )
             objectDict->remove( "BrowserView" );
    }
} BrowserView_metaObj_unloader;
#endif

void BrowserView::initMetaObject()
{
    if ( metaObj )
	return;
    if ( qstrcmp(View::className(), "View") != 0 )
	badSuperclassWarning("BrowserView","View");
    (void) staticMetaObject();
}

#ifndef QT_NO_TRANSLATION

QString BrowserView::tr(const char* s)
{
    return qApp->translate( "BrowserView", s, 0 );
}

QString BrowserView::tr(const char* s, const char * c)
{
    return qApp->translate( "BrowserView", s, c );
}

#endif // QT_NO_TRANSLATION

QMetaObject* BrowserView::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    (void) View::staticMetaObject();
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    typedef void (BrowserView::*m1_t0)(const KURL&,const KParts::URLArgs&);
    typedef void (QObject::*om1_t0)(const KURL&,const KParts::URLArgs&);
    typedef void (BrowserView::*m1_t1)(int);
    typedef void (QObject::*om1_t1)(int);
    typedef void (BrowserView::*m1_t2)(bool);
    typedef void (QObject::*om1_t2)(bool);
    typedef void (BrowserView::*m1_t3)(bool);
    typedef void (QObject::*om1_t3)(bool);
    typedef void (BrowserView::*m1_t4)();
    typedef void (QObject::*om1_t4)();
    typedef void (BrowserView::*m1_t5)();
    typedef void (QObject::*om1_t5)();
    typedef void (BrowserView::*m1_t6)();
    typedef void (QObject::*om1_t6)();
    typedef void (BrowserView::*m1_t7)();
    typedef void (QObject::*om1_t7)();
    typedef void (BrowserView::*m1_t8)();
    typedef void (QObject::*om1_t8)();
    typedef void (BrowserView::*m1_t9)();
    typedef void (QObject::*om1_t9)();
    typedef void (BrowserView::*m1_t10)();
    typedef void (QObject::*om1_t10)();
    typedef void (BrowserView::*m1_t11)();
    typedef void (QObject::*om1_t11)();
    typedef void (BrowserView::*m1_t12)();
    typedef void (QObject::*om1_t12)();
    typedef void (BrowserView::*m1_t13)(KIO::Job*);
    typedef void (QObject::*om1_t13)(KIO::Job*);
    typedef void (BrowserView::*m1_t14)();
    typedef void (QObject::*om1_t14)();
    typedef void (BrowserView::*m1_t15)(KIO::Job*,const QString&);
    typedef void (QObject::*om1_t15)(KIO::Job*,const QString&);
    typedef void (BrowserView::*m1_t16)();
    typedef void (QObject::*om1_t16)();
    typedef void (BrowserView::*m1_t17)();
    typedef void (QObject::*om1_t17)();
    m1_t0 v1_0 = &BrowserView::openURL;
    om1_t0 ov1_0 = (om1_t0)v1_0;
    m1_t1 v1_1 = &BrowserView::zoomTo;
    om1_t1 ov1_1 = (om1_t1)v1_1;
    m1_t2 v1_2 = &BrowserView::toggleStatusBar;
    om1_t2 ov1_2 = (om1_t2)v1_2;
    m1_t3 v1_3 = &BrowserView::toggleLocationBar;
    om1_t3 ov1_3 = (om1_t3)v1_3;
    m1_t4 v1_4 = &BrowserView::home;
    om1_t4 ov1_4 = (om1_t4)v1_4;
    m1_t5 v1_5 = &BrowserView::back;
    om1_t5 ov1_5 = (om1_t5)v1_5;
    m1_t6 v1_6 = &BrowserView::forward;
    om1_t6 ov1_6 = (om1_t6)v1_6;
    m1_t7 v1_7 = &BrowserView::reload;
    om1_t7 ov1_7 = (om1_t7)v1_7;
    m1_t8 v1_8 = &BrowserView::stop;
    om1_t8 ov1_8 = (om1_t8)v1_8;
    m1_t9 v1_9 = &BrowserView::find;
    om1_t9 ov1_9 = (om1_t9)v1_9;
    m1_t10 v1_10 = &BrowserView::findNext;
    om1_t10 ov1_10 = (om1_t10)v1_10;
    m1_t11 v1_11 = &BrowserView::findClose;
    om1_t11 ov1_11 = (om1_t11)v1_11;
    m1_t12 v1_12 = &BrowserView::runError;
    om1_t12 ov1_12 = (om1_t12)v1_12;
    m1_t13 v1_13 = &BrowserView::started;
    om1_t13 ov1_13 = (om1_t13)v1_13;
    m1_t14 v1_14 = &BrowserView::completed;
    om1_t14 ov1_14 = (om1_t14)v1_14;
    m1_t15 v1_15 = &BrowserView::infoMessage;
    om1_t15 ov1_15 = (om1_t15)v1_15;
    m1_t16 v1_16 = &BrowserView::goHistoryFromBuffer;
    om1_t16 ov1_16 = (om1_t16)v1_16;
    m1_t17 v1_17 = &BrowserView::openURLNotify;
    om1_t17 ov1_17 = (om1_t17)v1_17;
    QMetaData *slot_tbl = QMetaObject::new_metadata(18);
    QMetaData::Access *slot_tbl_access = QMetaObject::new_metaaccess(18);
    slot_tbl[0].name = "openURL(const KURL&,const KParts::URLArgs&)";
    slot_tbl[0].ptr = (QMember)ov1_0;
    slot_tbl_access[0] = QMetaData::Public;
    slot_tbl[1].name = "zoomTo(int)";
    slot_tbl[1].ptr = (QMember)ov1_1;
    slot_tbl_access[1] = QMetaData::Public;
    slot_tbl[2].name = "toggleStatusBar(bool)";
    slot_tbl[2].ptr = (QMember)ov1_2;
    slot_tbl_access[2] = QMetaData::Public;
    slot_tbl[3].name = "toggleLocationBar(bool)";
    slot_tbl[3].ptr = (QMember)ov1_3;
    slot_tbl_access[3] = QMetaData::Public;
    slot_tbl[4].name = "home()";
    slot_tbl[4].ptr = (QMember)ov1_4;
    slot_tbl_access[4] = QMetaData::Public;
    slot_tbl[5].name = "back()";
    slot_tbl[5].ptr = (QMember)ov1_5;
    slot_tbl_access[5] = QMetaData::Public;
    slot_tbl[6].name = "forward()";
    slot_tbl[6].ptr = (QMember)ov1_6;
    slot_tbl_access[6] = QMetaData::Public;
    slot_tbl[7].name = "reload()";
    slot_tbl[7].ptr = (QMember)ov1_7;
    slot_tbl_access[7] = QMetaData::Public;
    slot_tbl[8].name = "stop()";
    slot_tbl[8].ptr = (QMember)ov1_8;
    slot_tbl_access[8] = QMetaData::Public;
    slot_tbl[9].name = "find()";
    slot_tbl[9].ptr = (QMember)ov1_9;
    slot_tbl_access[9] = QMetaData::Public;
    slot_tbl[10].name = "findNext()";
    slot_tbl[10].ptr = (QMember)ov1_10;
    slot_tbl_access[10] = QMetaData::Public;
    slot_tbl[11].name = "findClose()";
    slot_tbl[11].ptr = (QMember)ov1_11;
    slot_tbl_access[11] = QMetaData::Public;
    slot_tbl[12].name = "runError()";
    slot_tbl[12].ptr = (QMember)ov1_12;
    slot_tbl_access[12] = QMetaData::Public;
    slot_tbl[13].name = "started(KIO::Job*)";
    slot_tbl[13].ptr = (QMember)ov1_13;
    slot_tbl_access[13] = QMetaData::Public;
    slot_tbl[14].name = "completed()";
    slot_tbl[14].ptr = (QMember)ov1_14;
    slot_tbl_access[14] = QMetaData::Public;
    slot_tbl[15].name = "infoMessage(KIO::Job*,const QString&)";
    slot_tbl[15].ptr = (QMember)ov1_15;
    slot_tbl_access[15] = QMetaData::Private;
    slot_tbl[16].name = "goHistoryFromBuffer()";
    slot_tbl[16].ptr = (QMember)ov1_16;
    slot_tbl_access[16] = QMetaData::Private;
    slot_tbl[17].name = "openURLNotify()";
    slot_tbl[17].ptr = (QMember)ov1_17;
    slot_tbl_access[17] = QMetaData::Private;
    typedef void (BrowserView::*m2_t0)(View*,const KURL&,const KParts::URLArgs&);
    typedef void (QObject::*om2_t0)(View*,const KURL&,const KParts::URLArgs&);
    typedef void (BrowserView::*m2_t1)(const QString&);
    typedef void (QObject::*om2_t1)(const QString&);
    m2_t0 v2_0 = &BrowserView::openURLRequest;
    om2_t0 ov2_0 = (om2_t0)v2_0;
    m2_t1 v2_1 = &BrowserView::locationBarURLChanged;
    om2_t1 ov2_1 = (om2_t1)v2_1;
    QMetaData *signal_tbl = QMetaObject::new_metadata(2);
    signal_tbl[0].name = "openURLRequest(View*,const KURL&,const KParts::URLArgs&)";
    signal_tbl[0].ptr = (QMember)ov2_0;
    signal_tbl[1].name = "locationBarURLChanged(const QString&)";
    signal_tbl[1].ptr = (QMember)ov2_1;
    metaObj = QMetaObject::new_metaobject(
	"BrowserView", "View",
	slot_tbl, 18,
	signal_tbl, 2,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    metaObj->set_slot_access( slot_tbl_access );
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    return metaObj;
}

// SIGNAL openURLRequest
void BrowserView::openURLRequest( View* t0, const KURL& t1, const KParts::URLArgs& t2 )
{
    // No builtin function for signal parameter type View*,const KURL&,const KParts::URLArgs&
    QConnectionList *clist = receivers("openURLRequest(View*,const KURL&,const KParts::URLArgs&)");
    if ( !clist || signalsBlocked() )
	return;
    typedef void (QObject::*RT0)();
    typedef void (QObject::*RT1)(View*);
    typedef void (QObject::*RT2)(View*,const KURL&);
    typedef void (QObject::*RT3)(View*,const KURL&,const KParts::URLArgs&);
    RT0 r0;
    RT1 r1;
    RT2 r2;
    RT3 r3;
    QConnectionListIt it(*clist);
    QConnection   *c;
    QSenderObject *object;
    while ( (c=it.current()) ) {
	++it;
	object = (QSenderObject*)c->object();
	object->setSender( this );
	switch ( c->numArgs() ) {
	    case 0:
#ifdef Q_FP_CCAST_BROKEN
		r0 = reinterpret_cast<RT0>(*(c->member()));
#else
		r0 = (RT0)*(c->member());
#endif
		(object->*r0)();
		break;
	    case 1:
#ifdef Q_FP_CCAST_BROKEN
		r1 = reinterpret_cast<RT1>(*(c->member()));
#else
		r1 = (RT1)*(c->member());
#endif
		(object->*r1)(t0);
		break;
	    case 2:
#ifdef Q_FP_CCAST_BROKEN
		r2 = reinterpret_cast<RT2>(*(c->member()));
#else
		r2 = (RT2)*(c->member());
#endif
		(object->*r2)(t0, t1);
		break;
	    case 3:
#ifdef Q_FP_CCAST_BROKEN
		r3 = reinterpret_cast<RT3>(*(c->member()));
#else
		r3 = (RT3)*(c->member());
#endif
		(object->*r3)(t0, t1, t2);
		break;
	}
    }
}

// SIGNAL locationBarURLChanged
void BrowserView::locationBarURLChanged( const QString& t0 )
{
    activate_signal_strref( "locationBarURLChanged(const QString&)", t0 );
}
