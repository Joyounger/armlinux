/****************************************************************************
** KRun meta object code from reading C++ file 'krun.h'
**
** Created: Thu Nov 20 06:13:47 2008
**      by: The Qt MOC ($Id: qt/src/moc/moc.y   2.3.10   edited 2005-01-24 $)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#if !defined(Q_MOC_OUTPUT_REVISION)
#define Q_MOC_OUTPUT_REVISION 9
#elif Q_MOC_OUTPUT_REVISION != 9
#error "Moc format conflict - please regenerate all moc files"
#endif

#include "krun.h"
#include <qmetaobject.h>
#include <qapplication.h>
#ifdef QWS
#include <qobjectdict.h>
#endif



const char *KRun::className() const
{
    return "KRun";
}

QMetaObject *KRun::metaObj = 0;

#ifdef QWS
static class KRun_metaObj_Unloader {
public:
    ~KRun_metaObj_Unloader()
    {
         if ( objectDict )
             objectDict->remove( "KRun" );
    }
} KRun_metaObj_unloader;
#endif

void KRun::initMetaObject()
{
    if ( metaObj )
	return;
    if ( qstrcmp(QObject::className(), "QObject") != 0 )
	badSuperclassWarning("KRun","QObject");
    (void) staticMetaObject();
}

#ifndef QT_NO_TRANSLATION

QString KRun::tr(const char* s)
{
    return qApp->translate( "KRun", s, 0 );
}

QString KRun::tr(const char* s, const char * c)
{
    return qApp->translate( "KRun", s, c );
}

#endif // QT_NO_TRANSLATION

QMetaObject* KRun::staticMetaObject()
{
    if ( metaObj )
	return metaObj;
    (void) QObject::staticMetaObject();
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    typedef void (KRun::*m1_t0)(KIO::Job*);
    typedef void (QObject::*om1_t0)(KIO::Job*);
    typedef void (KRun::*m1_t1)(KIO::Job*);
    typedef void (QObject::*om1_t1)(KIO::Job*);
    typedef void (KRun::*m1_t2)();
    typedef void (QObject::*om1_t2)();
    typedef void (KRun::*m1_t3)(KIO::Job*,const QByteArray&);
    typedef void (QObject::*om1_t3)(KIO::Job*,const QByteArray&);
    typedef void (KRun::*m1_t4)(KIO::Job*,const QString&);
    typedef void (QObject::*om1_t4)(KIO::Job*,const QString&);
    m1_t0 v1_0 = &KRun::slotJobResult;
    om1_t0 ov1_0 = (om1_t0)v1_0;
    m1_t1 v1_1 = &KRun::slotScanFinished;
    om1_t1 ov1_1 = (om1_t1)v1_1;
    m1_t2 v1_2 = &KRun::slotStart;
    om1_t2 ov1_2 = (om1_t2)v1_2;
    m1_t3 v1_3 = &KRun::slotJobData;
    om1_t3 ov1_3 = (om1_t3)v1_3;
    m1_t4 v1_4 = &KRun::slotFoundMime;
    om1_t4 ov1_4 = (om1_t4)v1_4;
    QMetaData *slot_tbl = QMetaObject::new_metadata(5);
    QMetaData::Access *slot_tbl_access = QMetaObject::new_metaaccess(5);
    slot_tbl[0].name = "slotJobResult(KIO::Job*)";
    slot_tbl[0].ptr = (QMember)ov1_0;
    slot_tbl_access[0] = QMetaData::Protected;
    slot_tbl[1].name = "slotScanFinished(KIO::Job*)";
    slot_tbl[1].ptr = (QMember)ov1_1;
    slot_tbl_access[1] = QMetaData::Protected;
    slot_tbl[2].name = "slotStart()";
    slot_tbl[2].ptr = (QMember)ov1_2;
    slot_tbl_access[2] = QMetaData::Private;
    slot_tbl[3].name = "slotJobData(KIO::Job*,const QByteArray&)";
    slot_tbl[3].ptr = (QMember)ov1_3;
    slot_tbl_access[3] = QMetaData::Private;
    slot_tbl[4].name = "slotFoundMime(KIO::Job*,const QString&)";
    slot_tbl[4].ptr = (QMember)ov1_4;
    slot_tbl_access[4] = QMetaData::Private;
    typedef void (KRun::*m2_t0)();
    typedef void (QObject::*om2_t0)();
    m2_t0 v2_0 = &KRun::error;
    om2_t0 ov2_0 = (om2_t0)v2_0;
    QMetaData *signal_tbl = QMetaObject::new_metadata(1);
    signal_tbl[0].name = "error()";
    signal_tbl[0].ptr = (QMember)ov2_0;
    metaObj = QMetaObject::new_metaobject(
	"KRun", "QObject",
	slot_tbl, 5,
	signal_tbl, 1,
#ifndef QT_NO_PROPERTIES
	0, 0,
	0, 0,
#endif // QT_NO_PROPERTIES
	0, 0 );
    metaObj->set_slot_access( slot_tbl_access );
#ifndef QT_NO_PROPERTIES
#endif // QT_NO_PROPERTIES
    return metaObj;
}

// SIGNAL error
void KRun::error()
{
    activate_signal( "error()" );
}
